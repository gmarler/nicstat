--- nicstat.c.orig	2011-10-13 16:30:38.807659000 -0400
+++ nicstat.c     	2011-10-13 16:30:30.056565000 -0400
@@ -8,9 +8,14 @@
  * distribution, or at http://www.perlfoundation.org/artistic_license_2_0
  */
 
+/* Bloomberg Additions
+ * %Util has been split into %IUtil and %OUtil
+ * In Utilization and Out Utilization respectively
+ */
+
 #pragma ident	"@(#)nicstat.c	1.28	11/04/25"
 
-#define	NICSTAT_VERSION		"1.90"
+#define	NICSTAT_VERSION		"1.90.1"
 
 /* Is this GNU/Linux? */
 #if defined(__linux__) || defined(__linux) || defined(linux)
@@ -1930,16 +1935,16 @@
 		break;
 	case STYLE_FULL:
 		(void) printf(
-			"%8s %8s %7s %7s %7s %7s %7s %7s %5s %6s\n",
+			"%8s %8s %7s %7s %7s %7s %7s %7s %6s %6s %6s\n",
 			"Time", "Int", "rKB/s", "wKB/s", "rPk/s",
-			"wPk/s", "rAvs", "wAvs", "%Util", "Sat");
+			"wPk/s", "rAvs", "wAvs", "%IUtil", "%OUtil", "Sat/s");
 		break;
 	case STYLE_EXTENDED:
 		update_timestr(NULL);
 		(void) printf(
-			"%-10s %7s %7s %7s %7s  %5s %5s %5s %5s %5s  %5s\n",
+			"%-10s %7s %7s %7s %7s  %5s %5s %5s %5s %6s  %6s  %6s\n",
 			g_timestr, "RdKB", "WrKB", "RdPkt", "WrPkt", "IErr",
-			"OErr", "Coll", "NoCP", "Defer", "%Util");
+			"OErr", "Coll", "NoCP", "Defer", "%IUtil", "%OUtil");
 		break;
 	}
 }
@@ -1970,7 +1975,8 @@
 	double nocps;
 	double defers;
 	double tdiff;		/* time difference between samples */
-	double util;		/* utilisation */
+	double inutil;		/* In utilisation */
+	double oututil;		/* Out utilisation */
 
 	if (g_tcp)
 		print_tcp();
@@ -2043,18 +2049,29 @@
 			 * 100 for the % conversion, and 8 for
 			 * bytes2bits.
 			 */
-			if (nicp->duplex == 2)
+			if (nicp->duplex == 2) {
 				/* Full duplex */
+				/* Display In and Out Utilization
 				if (wbps > rbps)
 					util = wbps * 800 / nicp->speed;
 				else
 					util = rbps * 800 / nicp->speed;
-			else
-				util = (rbps + wbps) * 800 / nicp->speed;
-			if (util > 100)
-				util = 100;
-		} else
-			util = 0;
+				*/
+				inutil = rbps * 800 / nicp->speed;
+				oututil = wbps * 800 / nicp->speed;
+			} else {
+				/* If Half Duplex, In and Out is the same Util */
+				inutil = (rbps + wbps) * 800 / nicp->speed;
+				oututil = (rbps + wbps) * 800 / nicp->speed;
+			}
+			if (inutil > 100)
+				inutil = 100;
+			if (oututil > 100)
+				oututil = 100;
+		} else {
+			inutil = 0;
+			oututil = 0;
+		}
 
 		/* always print header if there are multiple NICs */
 		if (g_nicdata_count > 1)
@@ -2076,7 +2093,7 @@
 		case STYLE_FULL:
 			update_timestr(&nicp->new.tv.tv_sec);
 			(void) printf("%s %8s %7.*f %7.*f %7.*f %7.*f "
-				"%7.*f %7.*f %5.*f %6.*f\n",
+				"%7.*f %7.*f %6.*f %6.*f %6.*f\n",
 				g_timestr, nicp->name,
 				precision(rkps), rkps,
 				precision(wkps), wkps,
@@ -2084,23 +2101,25 @@
 				precision(wpps), wpps,
 				precision(ravs), ravs,
 				precision(wavs), wavs,
-				precision4(util), util,
+				precision4(inutil), inutil,
+				precision4(oututil), oututil,
 				precision(sats), sats);
 			break;
 		case STYLE_PARSEABLE:
 			(void) printf("%ld:%s:%.*f:%.*f:%.*f:%.*f:"
-				"%.*f:%.*f\n",
+				"%.*f:%.*f:%.*f\n",
 				nicp->new.tv.tv_sec, nicp->name,
 				precision_p(rkps), rkps,
 				precision_p(wkps), wkps,
 				precision_p(rpps), rpps,
 				precision_p(wpps), wpps,
-				precision4(util), util,
+				precision4(inutil), inutil,
+				precision4(oututil), oututil,
 				precision(sats), sats);
 			break;
 		case STYLE_EXTENDED:
 			(void) printf("%-10s %7.*f %7.*f %7.*f %7.*f  "
-				"%5.*f %5.*f %5.*f %5.*f %5.*f  %5.*f\n",
+				"%5.*f %5.*f %5.*f %5.*f  %5.*f  %6.*f  %6.*f\n",
 				nicp->name,
 				precision(rkps), rkps,
 				precision(wkps), wkps,
@@ -2111,7 +2130,8 @@
 				precision4(colls), colls,
 				precision4(nocps), nocps,
 				precision4(defers), defers,
-				precision4(util), util);
+				precision4(inutil), inutil,
+				precision4(oututil), oututil);
 			break;
 		case STYLE_EXTENDED_PARSEABLE:
 			/*
@@ -2119,20 +2139,22 @@
 			 * for backward compatibility
 			 */
 			(void) printf("%ld:%s:%.*f:%.*f:%.*f:%.*f:"
-				"%.*f:%.*f:%.*f:%.*f:%.*f:%.*f:%.*f:%.*f\n",
+				"%.*f:%.*f:%.*f:%.*f:%.*f:%.*f:%.*f:%.*f:%.*f:%.*f\n",
 				nicp->new.tv.tv_sec, nicp->name,
 				precision_p(rkps), rkps,
 				precision_p(wkps), wkps,
 				precision_p(rpps), rpps,
 				precision_p(wpps), wpps,
-				precision4(util), util,
+				precision4(inutil), inutil,
+				precision4(oututil), oututil,
 				precision(sats), sats,
 				precision(ierrs), ierrs,
 				precision(oerrs), oerrs,
 				precision(colls), colls,
 				precision(nocps), nocps,
 				precision(defers), defers,
-				precision(util), util);
+				precision(inutil), inutil,
+				precision(oututil), oututil);
 		}
 
 		/* Save the current values for next time */
